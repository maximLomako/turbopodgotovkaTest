{"version":3,"sources":["components/AddItemForm/AddItemForm.tsx","components/ChangeUserLog/ChangeUserLog.tsx","components/EditableSpan/EditableSpan.tsx","components/EditTime/EditableTime.tsx","components/LogTable/LogTable.tsx","state/state.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","AddItemForm","props","type","value","onChangeHandler","data","classes","FormControl","className","InputLabel","id","Select","labelId","onChange","map","u","MenuItem","firstName","name","container","display","flexWrap","textField","marginLeft","marginRight","width","button","itemsWrapper","alignItems","ChangeUserLog","usersState","eventLog","userIdFromUser","eventIdFromEventLog","setUserId","setEventId","time","setTimer","addItemLog","event","Number","target","TextField","label","InputLabelProps","shrink","inputProps","step","Button","variant","color","startIcon","onClick","padding","maxWidth","EditableSpan","useState","localState","setLocalState","title","stringId","logState","editMode","setEditMode","getTitle","find","t","userId","eventId","size","onDoubleClick","EditableTime","changeTimeLog","defaultValue","String","onBlur","eventTime","table","justifyContent","tableCell","LogTable","deleteItemLog","changeNameLog","changeEventLog","getName","logUserId","res","userName","getEvent","TableContainer","style","maxHeight","overflow","Table","aria-label","TableBody","row","TableRow","borderBottom","TableCell","align","IconButton","fontSize","lastName","app","backgroundColor","height","random","uniqueRandom","App","setUserIdFromUser","setEventIdFromEventLog","setTime","setLogState","Grid","direction","justify","filter","l","copyLogState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b24705f.chunk.js","sourcesContent":["import {createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface AddItemFormPropsType {\n  type: string\n  value: number\n  onChangeHandler: (event: React.ChangeEvent<{ value: unknown }>) => void\n  data: Array<any>\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    }\n  }),\n);\n\nexport const AddItemForm: React.FC<AddItemFormPropsType> = (props) => {\n  const {type, value, onChangeHandler, data} = props;\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-label\">{type}</InputLabel>\n      <Select\n        labelId=\"name-select-label\"\n        id=\"name-select\"\n        value={value}\n        onChange={onChangeHandler}\n      >\n        {data.map(u => <MenuItem key={u.id} value={u.id}>{u.firstName || u.name}</MenuItem>)}\n      </Select>\n    </FormControl>\n  )\n}","import React from \"react\";\nimport {Button, createStyles, makeStyles, TextField, Theme} from \"@material-ui/core\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {AddItemForm} from \"../AddItemForm/AddItemForm\";\nimport {EventLogType, UserStateType} from \"../../state/state\";\n\ninterface ChangeUserLogPropsType {\n  userIdFromUser: number\n  eventIdFromEventLog: number\n  setUserId: (value: number) => void\n  setEventId: (value: number) => void\n  setTimer: (value: string) => void\n  addItemLog: () => void\n  usersState: Array<UserStateType>\n  eventLog: Array<EventLogType>\n  time: string\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    itemsWrapper: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }))\n\nexport const ChangeUserLog: React.FC<ChangeUserLogPropsType> = (props) => {\n  const {\n    usersState, eventLog, userIdFromUser,\n    eventIdFromEventLog, setUserId, setEventId,\n    time, setTimer, addItemLog\n  } = props;\n  const classes = useStyles();\n\n  const handleChangeName = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setUserId(Number(event.target.value));\n  };\n  const handleChangeEvent = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setEventId(Number(event.target.value));\n  };\n  const handleChangeTime = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTimer(event.target.value as string);\n  };\n  const onCLickHandler = () => {\n    addItemLog();\n    setUserId(1);\n    setEventId(1);\n    setTimer('00:00');\n  }\n\n  return (\n    <div>\n      <div className={classes.itemsWrapper}>\n        <AddItemForm\n          type='Name'\n          value={userIdFromUser}\n          onChangeHandler={handleChangeName}\n          data={usersState}/>\n        <AddItemForm\n          type='Event'\n          value={eventIdFromEventLog}\n          onChangeHandler={handleChangeEvent}\n          data={eventLog}/>\n        <TextField\n          id=\"time\"\n          label=\"Time\"\n          type=\"time\"\n          value={time}\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 900, // 5 min\n          }}\n          onChange={handleChangeTime}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddBoxIcon/>}\n          onClick={onCLickHandler}\n        >\n          Add\n        </Button>\n      </div>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport {createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme} from \"@material-ui/core\";\nimport {LogStateType} from \"../../App\";\n\ninterface EditableSpanPropsType {\n  stringId: number\n  type: string\n  data: Array<any>\n  logState: Array<LogStateType>\n  title: string\n  onChange: (stringId: number, userId: number) => void\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  formControl: {\n    margin: theme.spacing(1),\n    padding: 1,\n    maxWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  }\n}),\n);\n\nexport const EditableSpan: React.FC<EditableSpanPropsType> = (props) => {\n  const classes = useStyles();\n  const [localState, setLocalState] = useState('')\n  const {type, onChange, data, title, stringId, logState} = props;\n  const [editMode, setEditMode] = useState(false);\n  const getTitle = () => {\n    let res: string;\n    if (type === 'Name') {\n      // @ts-ignore\n      res = (logState.find(t => t.id === stringId).userId);\n    } else {\n      // @ts-ignore\n      res = (logState.find(t => t.id === stringId).eventId);\n    }\n    return res\n  }\n\n  const activateEditMode = () => {\n    setEditMode(true);\n    setLocalState(getTitle);\n  };\n\n  const activateViewMode = () => {\n    setEditMode(false)\n\n  };\n  const onChangeHandler = (event: React.ChangeEvent<{ value: unknown }>) => {\n    activateViewMode();\n    onChange(stringId, Number(event.target.value))\n  }\n\n  return (\n    editMode\n      ? <FormControl className={classes.formControl} size={\"small\"}>\n        <InputLabel id=\"demo-simple-select-label\">{type}</InputLabel>\n        <Select\n          labelId=\"name-select-label\"\n          id=\"name-select\"\n          value={localState}\n          onChange={onChangeHandler}\n        >\n          {data.map(u => <MenuItem key={u.id} value={u.id}>{u.firstName || u.name}</MenuItem>)}\n        </Select>\n      </FormControl>\n      : <span onDoubleClick={activateEditMode}>{title}</span>\n  )\n}","import React, {useState} from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport {useStyles} from \"../ChangeUserLog/ChangeUserLog\";\nimport {LogStateType} from \"../../App\";\n\ninterface EditableTimePropsType {\n  stringId: number\n  changeTimeLog: (stringId: number, time: string) => void\n  title: string\n  logState: Array<LogStateType>\n}\n\nexport const EditableTime: React.FC<EditableTimePropsType> = (props) => {\n  const classes = useStyles();\n  const {\n    stringId,\n    changeTimeLog,\n    title,\n    logState\n  } = props;\n\n  const [editMode, setEditMode] = useState(false);\n  const [localState, setLocalState] = useState('')\n\n  const activateEditMode = () => {\n    setEditMode(true);\n    // @ts-ignore\n    setLocalState(logState.find(t => t.id === stringId).eventTime);\n  };\n  const activateViewMode = () => {\n    setEditMode(false)\n\n  };\n  const onChangeHandler = (event: React.ChangeEvent<{ value: unknown }>) => {\n    changeTimeLog(stringId, String(event.target.value))\n  }\n\n  return (\n    editMode\n      ? <TextField\n        id=\"time\"\n        label=\"Time\"\n        type=\"time\"\n        defaultValue={localState}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        inputProps={{\n          step: 900, // 5 min\n        }}\n        onChange={onChangeHandler}\n        onBlur={activateViewMode}\n      />\n      : <span onDoubleClick={activateEditMode}>{title}</span>\n  )\n}","import React from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Theme\n} from \"@material-ui/core\";\nimport {LogStateType} from \"../../App\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {EditableSpan} from \"../EditableSpan/EditableSpan\";\nimport {EditableTime} from \"../EditTime/EditableTime\";\nimport {EventLogType, UserStateType} from \"../../state/state\";\n\ninterface LogTablePropsType {\n  usersState: Array<UserStateType>\n  logState: Array<LogStateType>\n  eventLog: Array<EventLogType>\n  deleteItemLog: (id: number) => void\n  changeNameLog: (stringId: number, userId: number) => void\n  changeEventLog: (stringId: number, eventId: number) => void\n  changeTimeLog: (stringId: number, time: string) => void\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      maxWidth: 800,\n      justifyContent: 'center'\n    },\n    tableCell: {\n      width: 250\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\n\nexport const LogTable: React.FC<LogTablePropsType> = (props) => {\n  const classes = useStyles();\n  const {\n    usersState, logState,\n    deleteItemLog,\n    changeNameLog, changeEventLog, eventLog, changeTimeLog\n  } = props;\n  const getName = (logUserId: number) => {\n    const res = usersState.find(u => u.id === logUserId);\n    if (res) {\n      return res.userName\n    } else {\n      return \"\"\n    }\n  }\n  const getEvent = (eventId: number) => {\n    const res = eventLog.find(u => u.id === eventId);\n    if (res) {\n      return res.name\n    } else {\n      return \" \"\n    }\n  }\n  return (\n    <TableContainer style={{width: '40%', maxHeight: '500px', overflow: 'scroll'}}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableBody>\n          {logState.map((row) => (\n            <TableRow key={row.id} style={{borderBottom: 'green'}}>\n              <TableCell className={classes.tableCell} align=\"center\">\n                <EditableSpan\n                  stringId={row.id}\n                  type={'Name'}\n                  onChange={changeNameLog}\n                  data={usersState}\n                  logState={logState}\n                  title={getName(row.userId)}\n                />\n\n              </TableCell>\n              <TableCell className={classes.tableCell} align=\"center\">\n                <EditableSpan\n                  stringId={row.id}\n                  type={'Event'}\n                  onChange={changeEventLog}\n                  data={eventLog}\n                  logState={logState}\n                  title={getEvent(row.eventId)}\n                />\n\n              </TableCell>\n              <TableCell className={classes.tableCell} align=\"center\">\n                <EditableTime stringId={row.id} changeTimeLog={changeTimeLog} title={row.eventTime} logState={logState}/>\n              </TableCell>\n              <TableCell>\n                <IconButton\n                  aria-label=\"delete\"\n                  className={classes.margin}\n                  onClick={() => deleteItemLog(row.id)}\n                >\n                  <DeleteForeverIcon fontSize=\"default\" color=\"secondary\"/>\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}","export interface UserStateType {\n  id: number\n  userName: string\n  firstName: string\n  lastName: string\n}\n\nexport interface EventLogType {\n  id: number\n  name: string\n}\n\nexport const usersState: Array<UserStateType> = [\n  {id: 1, userName: 'Dru', firstName: 'Dru', lastName: 'England'},\n  {id: 2, userName: 'Chantel', firstName: 'Chantel', lastName: 'Holder'},\n  {id: 3, userName: 'Lynn', firstName: 'Lynn', lastName: 'Blevins'},\n  {id: 4, userName: 'Umaiza', firstName: 'Umaiza', lastName: 'Elliot'},\n  {id: 5, userName: 'Wayne', firstName: 'Wayne', lastName: 'Hamer'},\n  {id: 6, userName: 'Jasper', firstName: 'Jasper', lastName: 'Mcintosh'},\n  {id: 7, userName: 'Edmund', firstName: 'Edmund', lastName: 'Nolan'},\n  {id: 8, userName: 'Lennon', firstName: 'Lennon', lastName: 'Franklin'},\n  {id: 9, userName: 'Arla', firstName: 'Arla', lastName: 'Cash'},\n  {id: 10, userName: 'Rae', firstName: 'Rae', lastName: 'Mendez'}\n]\nexport const eventLog: Array<EventLogType> = [\n  {id: 1, name: 'site'},\n  {id: 2, name: 'app'},\n  {id: 3, name: 'other'}\n]","import React, {useState} from 'react';\nimport {ChangeUserLog} from './components/ChangeUserLog/ChangeUserLog';\nimport {LogTable} from \"./components/LogTable/LogTable\";\nimport uniqueRandom from \"unique-random\";\nimport {createStyles, Grid, makeStyles} from '@material-ui/core';\nimport {eventLog, usersState} from \"./state/state\";\n\nexport interface LogStateType {\n  id: number,\n  userId: number,\n  eventId: number,\n  eventTime: string\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    app: {\n      backgroundColor: '#D1F2FE',\n      height: '100vh'\n    }\n  })\n);\n\nconst random = uniqueRandom(1, 1000);\nconst App = () => {\n  const classes = useStyles();\n  const [userIdFromUser, setUserIdFromUser] = useState(1);\n  const [eventIdFromEventLog, setEventIdFromEventLog] = useState(1);\n  const [time, setTime] = useState('00:00');\n  const [logState, setLogState] = useState<Array<LogStateType>>([]);\n\n  const setUserId = (value: number) => {\n    setUserIdFromUser(value);\n  }\n  const setEventId = (value: number) => {\n    setEventIdFromEventLog(value);\n  }\n  const setTimer = (value: string) => {\n    setTime(value);\n  }\n  const addItemLog = () => {\n    setLogState([\n      ...logState,\n      {\n        id: random(),\n        userId: userIdFromUser,\n        eventId: eventIdFromEventLog,\n        eventTime: time\n      }\n    ])\n  }\n  const deleteItemLog = (id: number) => {\n    setLogState(logState.filter(l => l.id !== id));\n  }\n  const changeNameLog = (stringId: number, userId: number) => {\n    const copyLogState = logState.map(t => t.id === stringId ? {...t, userId} : t)\n    setLogState(copyLogState);\n  }\n  const changeEventLog = (stringId: number, eventId: number) => {\n    const copyLogState = logState.map(t => t.id === stringId ? {...t, eventId} : t)\n    setLogState(copyLogState);\n  }\n  const changeTimeLog = (stringId: number, time: string) => {\n    const copyLogState = logState.map(t => t.id === stringId ? {...t, eventTime: time} : t)\n    setLogState(copyLogState);\n  }\n  return (\n    <div className={classes.app}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <ChangeUserLog\n          userIdFromUser={userIdFromUser}\n          eventIdFromEventLog={eventIdFromEventLog}\n          time={time}\n          usersState={usersState}\n          eventLog={eventLog}\n          setUserId={setUserId}\n          setEventId={setEventId}\n          setTimer={setTimer}\n          addItemLog={addItemLog}\n        />\n        <LogTable\n          usersState={usersState}\n          logState={logState}\n          eventLog={eventLog}\n          deleteItemLog={deleteItemLog}\n          changeNameLog={changeNameLog}\n          changeEventLog={changeEventLog}\n          changeTimeLog={changeTimeLog}\n        />\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}